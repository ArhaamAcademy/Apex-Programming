//DML Statements

//INSERT OPERATION
//Inserting data i two tables correspondig first value's id
Customer__c objCust=new Customer__c();
objCust.Name='Test ABC';
insert objCust;

Invoice__c objNewInvoice=new Invoice__c();
objNewInvoice.Status__c='Pending';
objNewInvoice.Amount_Paid__c=1000;
objNewInvoice.Customer__c=objCust.id;

insert objNewInvoice;
System.debug('The customer'we added +objCust +' and the corresponding invoice for the customer '+objNewInvoice);

//UPDATE OPERATION
//Updating multiple records making them as a list first then a single DML statement is enough for the operation. This is a good practice.
List<Invoice__c> invoiceList=[select Id,Name,Status__c,createdDate from Invoice__c];

List<Invoice__c> updateInvoiceList=new List<Invoice__c>();

for(Invoice__c obj:invoiceList)
{
	if(obj.Status__c!='Paid')
	{
		obj.Status__c='Paid';
		updateInvoiceList.add(obj);	
	}
}
update updateInvoiceList;
System.debug('List has been updated and updated value of records are:'+updateInvoiceList);

//UPSERT OPERATION
//Creating an empty list and using it to do multiple operation like updating and inserting new records symultaniously
List<Customer__c> customerList=new List<Customer__c>();
Customer__c cus=[select Id,External_id__c,Customer_description__c from Customer__c where External_id__c='1234'];
cus.Customer_description__c = 'Hello how are you?';
customerList.add(cus);
for(integer i=1;i<10;i++)
{
    Customer__c objCust=new Customer__c(name='Test'+i,external_id__c='1234'+i); 
    customerList.add(objCust);
}
upsert customerList;

//DELETE OPERATION
//Deleting multiple or single record

List<Customer__c> customerToDel=[select id from Customer__c where Customer__c.Name LIKE 'Test%'];
delete customerToDel;
System.debug('SUCCESS '+customerToDel.size()+' Has been deleted');

//UNDELETE OPERATION
//Undeleting multiple or single record

List<Customer__c> fetchDelCustomers=[select id from Customer__c where Customer__c.Name LIKE 'Test%' ALL ROWS];
undelete fetchDelCustomers;
System.debug('SUCCESS '+fetchDelCustomers.size()+' Has been restored');
